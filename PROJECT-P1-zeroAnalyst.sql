-- SQL RETAIL SALES ANALYSIS - PROJECT-P1

-- LETS CREATE TABLE 

DROP TABLE IF EXISTS RETAIL_SALES;
CREATE TABLE RETAIL_SALES
(
  transactions_id INT PRIMARY KEY,
  sale_date	DATE,
  sale_time TIME,
  customer_id INT,
  gender VARCHAR(19),	
  age INT,
  category VARCHAR(39),	
  quantity INT,
  price_per_unit INT,
  cogs FLOAT,
  total_sale FLOAT

);

SELECT * FROM RETAIL_SALES;

-- DATA CLEANING
-- Fetch data where transaction id is null

SELECT * FROM RETAIL_SALES
WHERE transactions_id IS NULL;

-- FETCH DATA WHERE SALES DATE HAS NULL VALUES

SELECT * FROM RETAIL_SALES
WHERE sale_date IS NULL;

-- FETCH DATA WHERE SALE TIME HAS A NULL VALUES

SELECT * FROM RETAIL_SALES
WHERE sale_time IS NULL;

-- FETCH DATA WHERE CUSTOMER ID HAS A NULL VALUES 


SELECT * FROM RETAIL_SALES
WHERE customer_id IS NULL;

-- FETCH DATA WHERE GENDER HAS A NULL VALUES 

SELECT * FROM RETAIL_SALES
WHERE gender IS NULL;

-- FETCH DATA WHERE AGE HAS A NULL VALUES 

SELECT * FROM RETAIL_SALES
WHERE age IS NULL;

-- FETCH DATA WHERE CATEGORY HAS A NULL VALUES 

SELECT * FROM RETAIL_SALES
WHERE category IS NULL;

-- FETCH DATA WHERE QUANTITY HAS A NULL VALUES 

SELECT * FROM RETAIL_SALES
WHERE quantity IS NULL;

-- fatch data where PRICE PER UNIT HAS A NULL VALUES 

SELECT * FROM RETAIL_SALES
WHERE price_per_unit IS NULL;

-- FETCH DATA WHERE COGS HAS A NULL VALUES 

SELECT * FROM RETAIL_SALES
WHERE cogs IS NULL;

-- FETCH DATA WHERE TOTAL SALE HAS A NULL VALUES 

SELECT * FROM RETAIL_SALES
WHERE total_sale IS NULL;

-- fetch data where using OR in all coloumns has a null values 

SELECT * FROM RETAIL_SALES
WHERE 
      transactions_id IS NULL
	  or
	  sale_date IS NULL
	  or
	  sale_time IS NULL
	  or
	  customer_id IS NULL
	  or
	  gender IS NULL
	  or
	  age IS NULL
	  or
	  category IS NULL
	  or
	  quantity IS NULL
	  or
	  price_per_unit IS NULL
	  or
	  cogs IS NULL
	  or
	  total_sale IS NULL ;
	  
-- DELETE NULL VALUES FROM THE TABLE

DELETE FROM RETAIL_SALES
WHERE 
 transactions_id IS NULL
	  or
	  sale_date IS NULL
	  or
	  sale_time IS NULL
	  or
	  customer_id IS NULL
	  or
	  gender IS NULL
	  or
	  age IS NULL
	  or
	  category IS NULL
	  or
	  quantity IS NULL
	  or
	  price_per_unit IS NULL
	  or
	  cogs IS NULL
	  or
	  total_sale IS NULL ;

SELECT * FROM RETAIL_SALES;

-- DATA EXPLORATION

-- HOW MANY SALES WE HAVE ?
SELECT COUNT(*) AS TOTALSALES FROM RETAIL_SALES;

-- HOW MANY CUTOMERS WE HAVE ?
SELECT COUNT(CUSTOMER_ID)AS TOTAL_CUSTOMERS FROM RETAIL_SALES;

--HOW MANY UNIQUE CUSTOMERS WE HAVE ?
SELECT COUNT(DISTINCT CUSTOMER_ID)AS TOTAL_DISTINCT_CUSTOMER FROM RETAIL_SALES;

-- HOW MANY UNIQUE CATEGORY WE HAVE?
SELECT COUNT(DISTINCT CATEGORY)AS TOTAL_DISTINCT_CATEGORIES FROM RETAIL_SALES;

-- FETCH DISTINCT CATEGORY WE HAVE ?

SELECT DISTINCT CATEGORY FROM RETAIL_SALES;

/* DATA ANALYSIS & BUSINESS KEY PROBLEMS & ANSWERS 
          (BUNCH OF QUESTIONS )
*/

-- Q.1 WRITE A SQL QUERY TO RETRIEVE ALL COLUMNS FOR SALES MADE ON '2022-11-05'

SELECT *
FROM RETAIL_SALES
WHERE SALE_DATE = '2022-11-05';

--Q.2  WRITE A SQL QUERY TO RETRIEVE ALL TRANSACTIONS WHERE THE CATEGORY IS 'CLOTHING' AND THE QUANTITY SOLD IS MORE THAN 4 IN THE MONTH OF NOV-2022?

SELECT *
FROM RETAIL_SALES
WHERE CATEGORY = 'Clothing'  AND TO_CHAR(SALE_DATE,'YYYY-MM') = '2022-11' AND QUANTITY >= 4;

--Q.3 WRITE A SQL QUERY TO CALCULATE THE TOTAL SALES (TOTAL_SALE) FOR EACH CATEGORY?

SELECT CATEGORY,SUM(TOTAL_SALE) AS NET_SALE
FROM RETAIL_SALES
GROUP BY CATEGORY;

--Q.4 WRITE A SQL QUERY TO FIND THE AVERAGE AGE OF CUSTOMERS WHO PURCHASED ITEMS FROM THE 'BEAUTY' CATEGORY?

SELECT AVG(age)as AVERAGE_AGE
FROM RETAIL_SALES
WHERE Category = 'Beauty';

--Q.5 WRITE A SQL QUERY TO FIND ALL TRANSACTIONS WHERE THE TOTAL_SALES IS GREATER THAM 1000?

SELECT *
FROM RETAIL_SALES 
WHERE total_sale > 1000;

--Q.6 WRITE A SQL QUERY TO FIND THE TOTAL NUMBER OF TRANSACTIONS(TRANSACTION_ID) MADE BY EACH GENDER IN EACH CATEGORY?

SELECT CATEGORY,gender,COUNT(transactions_id)AS TOTAL_TRANSACTIONS
FROM RETAIL_SALES
GROUP BY CATEGORY,GENDER
order by category;

--Q.7 WRITE A SQL QUERY TO CALCULATE THE AVERAGE SALE FOR EACH MONTH.FIND OUT BEST SELLING MONTH IN EACH YEAR ?

SELECT
    EXTRACT(YEAR FROM sale_date)as YEAR,
	EXTRACT(MONTH FROM sale_date)as MONTH,
	AVG(total_sale)as AVERAGE_SALES,
	RANK() OVER(PARTITION BY  EXTRACT(YEAR FROM sale_date) ORDER BY AVG(total_sale) DESC )
FROM RETAIL_SALES
GROUP BY YEAR,MONTH;

SELECT *
FROM
(
SELECT
    EXTRACT(YEAR FROM sale_date)as YEAR,
	EXTRACT(MONTH FROM sale_date)as MONTH,
	AVG(total_sale)as AVERAGE_SALES,
	RANK() OVER(PARTITION BY  EXTRACT(YEAR FROM sale_date) ORDER BY AVG(total_sale) DESC )
FROM RETAIL_SALES
GROUP BY YEAR,MONTH
) AS T2
WHERE RANK = 1;

--Q.8 WRITE A SQL QUERY TO FIND THE TOP 5 CUSTOMERS BASED ON THE HIGHEST TOTAL SALES ?

SELECT customer_id,sum(total_sale)as total_sales
FROM RETAIL_SALES
group by customer_id,total_sale
ORDER BY total_sale desc
limit 5;
 
--Q.9 WRITE A SQL QUERY TO FIND THE NUMBER OF UNIQUE CUSTOMERS WHO PURCHASED ITEMS FROM EACH CATEGORY?

SELECT category,count(distinct customer_id)as unique_customer
from RETAIL_SALES
GROUP BY category;

--Q.10 WRITE A SQL QUERY TO CREATE EACH SHIFT AND NUMBER OF ORDERS (EXAMPLE MORNING <=12,AFTERNOON BETWEEN 12&17,EVENING>17)

WITH HOURLY_SALES AS
(
  SELECT
   *,
   CASE 
       WHEN EXTRACT(HOUR FROM SALE_TIME)<=12  THEN 'MORNING'
	   WHEN EXTRACT(HOUR FROM SALE_TIME) BETWEEN 12 AND 17 THEN 'AFTERNOON'
	   ELSE 'EVENING'
	END AS shift
FROM RETAIL_SALES
 )
 SELECT 
     shift,
	 COUNT(*)AS TOTAL_ORDERS
FROM HOURLY_SALES
GROUP BY shift;

-- PROJECT IS COMPLETED!!!!!!!!!!!!!!!!













